from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

frases = [
    # Positivas
    "Eu amei esse filme", "O produto √© √≥timo", "Que dia maravilhoso", "Gostei muito da comida",
    "O atendimento foi excelente", "Servi√ßo de primeira qualidade", "O aplicativo √© muito bom", "Funcionou perfeitamente bem",
    "Recomendo para todos", "Entrega r√°pida e eficiente", "Tudo funcionou como esperado", "Muito feliz com o resultado",
    "Experi√™ncia incr√≠vel", "Muito satisfeito com a compra", "Foi melhor do que imaginei", "Ambiente agrad√°vel e limpo",
    "Funcion√°rios super atenciosos", "Estou encantado com o atendimento", "Maravilhoso, nota 10", "Sensacional, voltarei com certeza",

    # Negativas
    "Eu odiei isso", "O atendimento foi p√©ssimo", "N√£o gostei do servi√ßo", "Horr√≠vel, perdi meu tempo",
    "Aplicativo cheio de erros", "Nada funcionou direito", "Muito ruim, n√£o recomendo", "A comida estava fria",
    "Demorou demais para chegar", "Me arrependi de ter comprado", "N√£o atendeu √†s expectativas", "Experi√™ncia decepcionante",
    "Servi√ßo horr√≠vel", "O site √© confuso e lento", "Fui mal tratado", "Produto veio com defeito",
    "Pior compra que j√° fiz", "N√£o volto nunca mais", "Lixo de atendimento", "Total desrespeito com o cliente"
]

sentimentos = [1]*20 + [0]*20

# Transformar texto em vetores
vetor = CountVectorizer()
x = vetor.fit_transform(frases)

# Criar o modelo
modelo = MultinomialNB()
modelo.fit(x, sentimentos)

# Testar
entrada = input("Digite uma frase: ")
entrada_vetor = vetor.transform([entrada])
resultado = modelo.predict(entrada_vetor)

if resultado[0] == 1:
    print("Sentimento: Positivo üòä")
else:
    print("Sentimento: Negativo üò†")